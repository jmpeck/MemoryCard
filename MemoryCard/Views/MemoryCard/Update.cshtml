@model MemoryCard.Models.Card


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Card</h4>
        <hr />
        @Html.ValidationSummary(true, "", new {  @class = "text-danger" })
        @Html.HiddenFor(model => Model.CardID)

        <div class="form-group">
            @Html.LabelFor(model => model.SideOne, htmlAttributes: new { @class = "control-label col=md" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.SideOne, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SideOne, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
           @Html.LabelFor(model => model.SideTwo, htmlAttributes: new { @class = "control-label col=md" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.SideTwo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SideTwo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
        @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.Subject,
                 new SelectList(Enum.GetValues(typeof(MemoryCard.Models.Subject))),
                  "Select Subject")
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>
       </div>

      <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
          <input type="submit" value="Save" class="btn btn-default" />
        </div>
     </div>
  </div>
           


}
